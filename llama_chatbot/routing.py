# -*- coding: utf-8 -*-
"""routing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cbluuCWzl7mnp6R6zpbUdi06XZ23G_IC
"""

import json
import os
import traceback
from topic_model import topic_model

TOPICS_PATH = os.path.join(os.path.dirname(__file__), "topics.json")

def load_topics():
    with open(TOPICS_PATH, "r", encoding="utf-8") as f:
        raw_topics = json.load(f)
        return {int(k): v for k, v in raw_topics.items()}

TOPICS = load_topics()

def detect_topic(query):
    try:
        topics, probs = topic_model.find_topics(query, top_n=1)
        predicted_topic = topics[0]
        confidence = probs[0]

        if predicted_topic in TOPICS:
            topic_name = TOPICS[predicted_topic]
            return {
                "topic_code": predicted_topic,
                "topic_name": topic_name,
                "confidence": confidence,
                "reasoning": f"Тема определена моделью BERTopic с уверенностью {confidence:.2f}."
            }
        else:
            return {
                "topic_code": 9,
                "topic_name": "вне тем",
                "confidence": confidence,
                "reasoning": f"BERTopic не распознала известные темы (код темы: {predicted_topic})."
            }

    except Exception as e:
        error_trace = traceback.format_exc()
        # Распечатаем ошибку в терминале
        print("[detect_topic] Exception:", error_trace)

        # Вернём подробную ошибку в reasoning
        return {
            "topic_code": 9,
            "topic_name": "вне тем",
            "confidence": 0.0,
            "reasoning": f"Ошибка при работе модели BERTopic: {str(e)}"
        }