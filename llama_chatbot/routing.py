# -*- coding: utf-8 -*-
"""routing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cbluuCWzl7mnp6R6zpbUdi06XZ23G_IC
"""

from topic_model import model, synonym_embeddings, SYNONYMS, SYNONYM_TO_TOPIC, TOPICS
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np

SIMILARITY_THRESHOLD = 0.55  # Можно настроить

def detect_topic(query):
    try:
        query_embedding = model.encode([query])
        similarities = cosine_similarity(query_embedding, synonym_embeddings)[0]

        # Группируем по topic_code
        topic_scores = {}
        for idx, score in enumerate(similarities):
            topic_code = SYNONYM_TO_TOPIC[SYNONYMS[idx]]
            if topic_code not in topic_scores or score > topic_scores[topic_code]:
                topic_scores[topic_code] = score

        # Ищем лучший topic
        best_topic_code = max(topic_scores, key=topic_scores.get)
        best_score = topic_scores[best_topic_code]

        if best_score >= SIMILARITY_THRESHOLD:
            return {
                "topic_code": best_topic_code,
                "topic_name": ", ".join(TOPICS[best_topic_code]),
                "confidence": float(best_score),
                "reasoning": f"Наиболее близкий синоним из темы: {TOPICS[best_topic_code]} (similarity {best_score:.2f})"
            }
        else:
            return {
                "topic_code": 9,
                "topic_name": "вне тем",
                "confidence": float(best_score),
                "reasoning": "Похожая тема не найдена. Similarity ниже порога."
            }

    except Exception as e:
        return {
            "topic_code": 9,
            "topic_name": "вне тем",
            "confidence": 0.0,
            "reasoning": f"Ошибка при классификации: {str(e)}"
        }